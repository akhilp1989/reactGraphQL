{"ast":null,"code":"import { gql } from 'apollo-boost';\nexport const typeDefs = gql`\nextend type Mutation{\n    ToggleHiddenCart:Boolean!\n}\n`;\nconst GET_CART_HIDDEN = gql`\ncartHidden @client\n`; /// Above the @client tells Apollo that it is looking for the value of cartHidden at client level meaning at cache\n\nexport const resolvers = {\n  //Ideal syntax of the mutation is like (_root,_args,_context,_info)\n  //_root provides the highest level object of the relationship\n  //_args= arguments\n  //_context= where we are storing or saving ( in our below case, we are destructuring {cache})\n  //_info just info\n  Mutation: {\n    toggleHiddenCart: (_root, _args, {\n      cache\n    }, _info) => {\n      const {\n        cartHidden\n      } = cache.readQuery({\n        query: GET_CART_HIDDEN\n      });\n      cache.writeQuery({\n        query: GET_CART_HIDDEN,\n        data: {\n          cartHidden: !cartHidden\n        }\n      });\n      return !cartHidden;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/akhil.parashara/Documents/graphqlreact/ecomWithGraphQL/reactGraphQL/client/src/graphql/resolvers.js"],"names":["gql","typeDefs","GET_CART_HIDDEN","resolvers","Mutation","toggleHiddenCart","_root","_args","cache","_info","cartHidden","readQuery","query","writeQuery","data"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,cAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAED,GAAI;;;;CAApB;AAKP,MAAME,eAAe,GAACF,GAAI;;CAA1B,C,CAGA;;AACA,OAAO,MAAMG,SAAS,GAAE;AACpB;AACA;AACA;AACA;AACA;AACCC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,gBAAgB,EAAE,CAACC,KAAD,EAAOC,KAAP,EAAa;AAACC,MAAAA;AAAD,KAAb,EAAqBC,KAArB,KAA6B;AAC3C,YAAM;AAACC,QAAAA;AAAD,UAAaF,KAAK,CAACG,SAAN,CAAgB;AAC/BC,QAAAA,KAAK,EAACV;AADyB,OAAhB,CAAnB;AAIAM,MAAAA,KAAK,CAACK,UAAN,CAAiB;AACbD,QAAAA,KAAK,EAACV,eADO;AAEbY,QAAAA,IAAI,EAAC;AAACJ,UAAAA,UAAU,EAAC,CAACA;AAAb;AAFQ,OAAjB;AAIA,aAAO,CAACA,UAAR;AACH;AAXI;AANU,CAAjB","sourcesContent":["import {gql} from 'apollo-boost';\n\nexport const typeDefs =gql`\nextend type Mutation{\n    ToggleHiddenCart:Boolean!\n}\n`\nconst GET_CART_HIDDEN=gql`\ncartHidden @client\n`;\n/// Above the @client tells Apollo that it is looking for the value of cartHidden at client level meaning at cache\nexport const resolvers ={\n    //Ideal syntax of the mutation is like (_root,_args,_context,_info)\n    //_root provides the highest level object of the relationship\n    //_args= arguments\n    //_context= where we are storing or saving ( in our below case, we are destructuring {cache})\n    //_info just info\n     Mutation:{\n         toggleHiddenCart :(_root,_args,{cache},_info)=>{\n             const {cartHidden}=cache.readQuery({\n                 query:GET_CART_HIDDEN\n             })\n\n             cache.writeQuery({\n                 query:GET_CART_HIDDEN,\n                 data:{cartHidden:!cartHidden}\n             })\n             return !cartHidden\n         }\n     } \n}"]},"metadata":{},"sourceType":"module"}