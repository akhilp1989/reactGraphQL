{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport \"firebase/auth\";\nvar config = {\n  apiKey: \"AIzaSyCvZB7VPetZOoi2OTD48ZNLQxE6qGvJ1fw\",\n  authDomain: \"graphqlproject-5f8ed.firebaseapp.com\",\n  databaseURL: \"https://graphqlproject-5f8ed.firebaseio.com\",\n  projectId: \"graphqlproject-5f8ed\",\n  storageBucket: \"graphqlproject-5f8ed.appspot.com\",\n  messagingSenderId: \"703452493122\",\n  appId: \"1:703452493122:web:8a54bcda200d6cb61204db\",\n  measurementId: \"G-3G8TG5TWZ5\"\n};\nexport const createUserProfileDocument = async (userAuth, addtionalDetails) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...addtionalDetails\n      });\n    } catch (err) {\n      console.log(\"error creating user\", err.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  //console.log('A->',collectionKey,objectsToAdd)\n  const collectionRef = firestore.collection(collectionKey);\n  console.log('B->', collectionRef);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    console.log(newDocRef);\n  });\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.default.auth(); //console.log(auth);\n\nconst firestore = firebase.firestore(); //console.log(firestore)\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => {\n  return auth.signInWithPopup(provider);\n};\nexport default firebase;","map":{"version":3,"sources":["/Users/akhil.parashara/Documents/graphqlreact/ecommerce-project/src/FireBase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","addtionalDetails","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","err","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","initializeApp","auth","default","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,IAAIC,MAAM,GAAC;AACPC,EAAAA,MAAM,EAAE,yCADD;AAEPC,EAAAA,UAAU,EAAE,sCAFL;AAGPC,EAAAA,WAAW,EAAE,6CAHN;AAIPC,EAAAA,SAAS,EAAE,sBAJJ;AAKPC,EAAAA,aAAa,EAAE,kCALR;AAMPC,EAAAA,iBAAiB,EAAE,cANZ;AAOPC,EAAAA,KAAK,EAAE,2CAPA;AAQPC,EAAAA,aAAa,EAAE;AARR,CAAX;AAWE,OAAO,MAAMC,yBAAyB,GAAE,OAAOC,QAAP,EAAiBC,gBAAjB,KAAqC;AAC3E,MAAG,CAACD,QAAJ,EAAa;AACb,QAAME,OAAO,GAACC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAd;AACA,QAAMC,QAAQ,GAAC,MAAMJ,OAAO,CAACK,GAAR,EAArB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAClB,UAAK;AAACC,MAAAA,WAAD;AAAaC,MAAAA;AAAb,QAAoBV,QAAzB;AACA,UAAMW,SAAS,GAAC,IAAIC,IAAJ,EAAhB;;AAEA,QAAG;AACD,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAEVC,QAAAA,SAFU;AAGhB,WAAGV;AAHa,OAAZ,CAAN;AAMD,KAPD,CAQA,OAAMa,GAAN,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,GAAG,CAACG,OAAtC;AACD;AAEF;;AACD,SAAOf,OAAP;AACD,CAvBM;AAwBP,OAAO,MAAMgB,yBAAyB,GAAC,CAACC,aAAD,EAAeC,YAAf,KAA8B;AACnE;AACA,QAAMC,aAAa,GAAClB,SAAS,CAACmB,UAAV,CAAqBH,aAArB,CAApB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBK,aAAlB;AACA,QAAME,KAAK,GAACpB,SAAS,CAACoB,KAAV,EAAZ;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAqBC,GAAG,IAAE;AACxB,UAAMC,SAAS,GAACL,aAAa,CAACjB,GAAd,EAAhB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYU,SAAZ;AACD,GAHD;AAID,CATM;AAYPrC,QAAQ,CAACsC,aAAT,CAAuBrC,MAAvB;AAEA,OAAO,MAAMsC,IAAI,GAACvC,QAAQ,CAACwC,OAAT,CAAiBD,IAAjB,EAAX,C,CACP;;AACA,MAAMzB,SAAS,GAACd,QAAQ,CAACc,SAAT,EAAhB,C,CACA;;AACC,MAAM2B,QAAQ,GAAC,IAAIzC,QAAQ,CAACuC,IAAT,CAAcG,kBAAlB,EAAf;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAC,MAAI;AAEjC,SAAQN,IAAI,CAACO,eAAL,CAAqBL,QAArB,CAAR;AACC,CAHK;AAKR,eAAezC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport \"firebase/auth\";\nvar config={\n    apiKey: \"AIzaSyCvZB7VPetZOoi2OTD48ZNLQxE6qGvJ1fw\",\n    authDomain: \"graphqlproject-5f8ed.firebaseapp.com\",\n    databaseURL: \"https://graphqlproject-5f8ed.firebaseio.com\",\n    projectId: \"graphqlproject-5f8ed\",\n    storageBucket: \"graphqlproject-5f8ed.appspot.com\",\n    messagingSenderId: \"703452493122\",\n    appId: \"1:703452493122:web:8a54bcda200d6cb61204db\",\n    measurementId: \"G-3G8TG5TWZ5\"\n  };\n\n  export const createUserProfileDocument= async (userAuth, addtionalDetails )=>{\n    if(!userAuth)return\n    const userRef=firestore.doc(`users/${userAuth.uid}`);\n    const snapShot=await userRef.get();\n\n    if(!snapShot.exists){\n      const{displayName,email}=userAuth;\n      const createdAt=new Date();\n\n      try{\n        await userRef.set({\n          displayName,\n          email,createdAt,\n          ...addtionalDetails\n        })\n\n      }\n      catch(err){\n        console.log(\"error creating user\",err.message);\n      }\n\n    }\n    return userRef\n  }\n  export const addCollectionAndDocuments=(collectionKey,objectsToAdd)=>{\n    //console.log('A->',collectionKey,objectsToAdd)\n    const collectionRef=firestore.collection(collectionKey);\n    console.log('B->',collectionRef)\n    const batch=firestore.batch();\n    objectsToAdd.forEach(obj=>{\n      const newDocRef=collectionRef.doc();\n      console.log(newDocRef)\n    })\n  }\n\n\n  firebase.initializeApp(config);\n\n  export const auth=firebase.default.auth();\n  //console.log(auth);\n  const firestore=firebase.firestore();\n  //console.log(firestore)\n   const provider=new firebase.auth.GoogleAuthProvider();\n   provider.setCustomParameters({prompt:'select_account'});\n   export const signInWithGoogle=()=>{\n    \n    return  auth.signInWithPopup(provider);\n    }\n  \n  export default firebase;"]},"metadata":{},"sourceType":"module"}