{"ast":null,"code":"var _jsxFileName = \"/Users/akhil.parashara/Documents/graphqlreact/ecommerce-project/src/ClassComponents/ShopComponent/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../../FunctionalComponents/Collection/collectionPage.component'; //import{firestore,convertCollectionsSnapshotToMap} from '../../FireBase/firebase.utils'\n\nimport { connect } from 'react-redux'; //import {updateCollections} from '../../Redux/ShopData/shopData.actions'\n\nimport WithSpinner from '../../FunctionalComponents/WithSpinner/withspinner.component';\nimport { fetchCollectionsStart } from '../../Redux/ShopData/shopData.actions';\nimport CollectionOverview from '../../FunctionalComponents/CollectionOverview/collection-overview.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass shopComponent extends Component {\n  // state={\n  //     loading:true\n  // }\n  // unsubscribeFromSanpShot=null\n  componentDidMount() {\n    const {\n      fetchCollectionsStart\n    } = this.props;\n    fetchCollectionsStart();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state; //console.log('Inside render from Shop->',loading)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 30\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:categoryId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 30\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(shopComponent);","map":{"version":3,"sources":["/Users/akhil.parashara/Documents/graphqlreact/ecommerce-project/src/ClassComponents/ShopComponent/shop.component.jsx"],"names":["React","Component","Route","CollectionPage","connect","WithSpinner","fetchCollectionsStart","CollectionOverview","CollectionOverviewWithSpinner","CollectionPageWithSpinner","shopComponent","componentDidMount","props","render","match","loading","state","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,gEAA3B,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,8DAAxB;AACA,SAASC,qBAAT,QAAsC,uCAAtC;AAEA,OAAOC,kBAAP,MAA+B,6EAA/B;AAEA,MAAMC,6BAA6B,GAACH,WAAW,CAACE,kBAAD,CAA/C;AACA,MAAME,yBAAyB,GAACJ,WAAW,CAACF,cAAD,CAA3C;;AAEA,MAAMO,aAAN,SAA4BT,SAA5B,CAAsC;AAClC;AACA;AACA;AAEA;AAEAU,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAAEL,MAAAA;AAAF,QAA4B,KAAKM,KAAvC;AAEAN,IAAAA,qBAAqB;AAEtB;;AACHO,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAQ,KAAKF,KAAnB;AACA,UAAM;AAACG,MAAAA;AAAD,QAAU,KAAKC,KAArB,CAFI,CAGJ;;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEF,KAAK,CAACG,IAAK,EAAjC;AACA,MAAA,MAAM,EAAGL,KAAD,iBAAS,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEG;AAA1C,SAAsDH,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAGA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,cAA3B;AACA,MAAA,MAAM,EAAGL,KAAD,iBAAS,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEG;AAAtC,SAAmDH,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADJ;AAQH;;AAzBiC;;AA2BtC,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACpCb,EAAAA,qBAAqB,EAAE,MAAMa,QAAQ,CAACb,qBAAqB,EAAtB;AADD,CAAL,CAAnC;;AAKA,eAAeF,OAAO,CAAC,IAAD,EAAMc,kBAAN,CAAP,CAAiCR,aAAjC,CAAf","sourcesContent":["import React,{Component} from 'react'\nimport {Route} from 'react-router-dom'\nimport CollectionPage from '../../FunctionalComponents/Collection/collectionPage.component'\n//import{firestore,convertCollectionsSnapshotToMap} from '../../FireBase/firebase.utils'\nimport {connect} from 'react-redux'\n//import {updateCollections} from '../../Redux/ShopData/shopData.actions'\nimport WithSpinner from '../../FunctionalComponents/WithSpinner/withspinner.component'\nimport { fetchCollectionsStart } from '../../Redux/ShopData/shopData.actions';\n\nimport CollectionOverview from '../../FunctionalComponents/CollectionOverview/collection-overview.component'\n\nconst CollectionOverviewWithSpinner=WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner=WithSpinner(CollectionPage);\n\nclass shopComponent extends Component {\n    // state={\n    //     loading:true\n    // }\n\n    // unsubscribeFromSanpShot=null\n\n    componentDidMount(){\n        const { fetchCollectionsStart } = this.props;\n\n        fetchCollectionsStart();\n      \n      }\n    render(){\n        const {match}=this.props;\n        const {loading}=this.state\n        //console.log('Inside render from Shop->',loading)\n        return (\n            <div className='shop-page'>\n            <Route exact path={`${match.path}`} \n            render={(props)=><CollectionOverviewWithSpinner isLoading={loading}{...props} />} /> \n            <Route path={`${match.path}/:categoryId`} \n            render={(props)=><CollectionPageWithSpinner isLoading={loading} {...props} />} />\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n  });\n  \n\nexport default connect(null,mapDispatchToProps)(shopComponent)\n\n\n"]},"metadata":{},"sourceType":"module"}