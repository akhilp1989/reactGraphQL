{"ast":null,"code":"var _jsxFileName = \"/Users/akhil.parashara/Documents/graphqlreact/ecommerce-project/src/Authentication/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../FunctionalComponents/FormInput/form-input.component';\nimport ButtonComponent from '../FunctionalComponents/Button/button-component'; //import {auth,signInWithGoogle} from '../FireBase/firebase.utils'\n\nimport { googleSignInStart, emailSignInStart } from '../Redux/User/user.action';\nimport { connect } from 'react-redux';\n\nconst singIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCred, setUserCred] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCred;\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // const {emailSignInStart}=this.props //// We always destructure it so that we dont always have to call this.props.functoinName\n\n    emailSignInStart(email, password); // console.log(this.state)\n  };\n\n  const changeHandler = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCred({ ...userCred,\n      [name]: value\n    });\n  }; //const {googleSignInStart}=this.props\n  //console.log('Props->',this.props)\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"I already have an Account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Sign In with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    value: email,\n    onChange: changeHandler,\n    name: \"email\",\n    required: \"required\",\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    onChange: changeHandler,\n    type: \"password\",\n    value: password,\n    name: \"password\",\n    label: \"Password\",\n    required: \"required\",\n    changeHandler: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ButtonComponent, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, \"Sign In \"), /*#__PURE__*/React.createElement(ButtonComponent, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Sign In with Google \"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  })) //signOut:()=>dispatch(signOutStart())\n\n});\n\nexport default connect(null, mapDispatchToProps)(singIn);","map":{"version":3,"sources":["/Users/akhil.parashara/Documents/graphqlreact/ecommerce-project/src/Authentication/sign-in.component.jsx"],"names":["React","useState","FormInput","ButtonComponent","googleSignInStart","emailSignInStart","connect","singIn","userCred","setUserCred","email","password","handleSubmit","event","preventDefault","changeHandler","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport './sign-in.styles.scss'\nimport FormInput from '../FunctionalComponents/FormInput/form-input.component'\nimport ButtonComponent from '../FunctionalComponents/Button/button-component'\n//import {auth,signInWithGoogle} from '../FireBase/firebase.utils'\nimport {googleSignInStart,emailSignInStart} from '../Redux/User/user.action'\nimport {connect} from 'react-redux'\n\n\nconst singIn = ({emailSignInStart,googleSignInStart})=> {\n  const [userCred,setUserCred]=useState({email:'',password:''})\n  const {email,password}=userCred\n    const handleSubmit= async event=>{\n        event.preventDefault()\n      // const {emailSignInStart}=this.props //// We always destructure it so that we dont always have to call this.props.functoinName\n        \n        emailSignInStart(email,password);\n\n        \n      // console.log(this.state)\n    }\n    const changeHandler=(event)=>{\n        const {name,value}=event.target\n        setUserCred({...userCred,[name]:value})\n        \n    }\n    \n        //const {googleSignInStart}=this.props\n        //console.log('Props->',this.props)\n        return(\n            <div className='sign-in'>\n            <h2>I already have an Account</h2>\n            <span>Sign In with your email and password</span>\n                \n                <form onSubmit={handleSubmit}>\n                \n                    <FormInput type='email' value={email} \n                    onChange={changeHandler} \n                    name=\"email\" \n                    required='required'\n                    label='Email' />\n                    \n                    <FormInput \n                    onChange={changeHandler}\n                    type=\"password\" \n                    value={password} \n                    name='password' \n                    label='Password'\n                    required='required'\n                   \n                    changeHandler={changeHandler}    />\n\n                  <div className='buttons'>\n                  <ButtonComponent  type=\"submit\">Sign In </ButtonComponent>\n                    <ButtonComponent type=\"button\"\n                     onClick={googleSignInStart} isGoogleSignIn >Sign In with Google </ButtonComponent>\n                  </div>\n                    \n                </form>\n            </div>\n        )\n    \n}\nconst mapDispatchToProps = dispatch =>({\n    googleSignInStart:()=>dispatch(googleSignInStart()),\n    emailSignInStart:(email,password)=>dispatch(emailSignInStart({email,password})),\n    //signOut:()=>dispatch(signOutStart())\n\n})\n\nexport default connect(null,mapDispatchToProps) (singIn)\n\n\n"]},"metadata":{},"sourceType":"module"}