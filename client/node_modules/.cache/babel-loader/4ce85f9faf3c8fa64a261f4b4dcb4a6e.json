{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shopData;\n\nconsole.log('SelectShop-', state.shopData);\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsFetching = createSelector([selectShop], shop => shop.isFetching);","map":{"version":3,"sources":["/Users/akhil.parashara/Documents/graphqlreact/ecommerce-project/src/Redux/ShopData/shopDataMap.selector.js"],"names":["createSelector","selectShop","state","shopData","console","log","selectCollections","shop","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsFetching","isFetching"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,QAAlC;;AACAC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BH,KAAK,CAACC,QAAhC;AACA,OAAO,MAAMG,iBAAiB,GAAGN,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE7CM,IAAI,IAAIA,IAAI,CAACC,WAFgC,CAAxC;AAIP,OAAO,MAAMC,2BAA2B,GAAGT,cAAc,CACvD,CAACM,iBAAD,CADuD,EAEvDE,WAAW,IAAGA,WAAW,GAAEE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAF,GAAwD,EAF1B,CAAlD;AAKP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAChDf,cAAc,CACZ,CAACM,iBAAD,CADY,EAEZE,WAAW,IAAGA,WAAW,GAAEA,WAAW,CAACO,kBAAD,CAAb,GAAkC,IAF/C,CADT;AAML,OAAO,MAAMC,gBAAgB,GAAGhB,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE5CM,IAAI,IAAGA,IAAI,CAACU,UAFgC,CAAvC","sourcesContent":["import {createSelector} from 'reselect'\nconst selectShop = state => state.shopData;\nconsole.log('SelectShop-',state.shopData);\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collections =>collections? Object.keys(collections).map(key => collections[key]):[]\n);\n \nexport const selectCollection = collectionUrlParam =>\n  createSelector(\n    [selectCollections],\n    collections =>collections? collections[collectionUrlParam]:null\n  );\n\n  export const selectIsFetching = createSelector(\n    [selectShop],\n    shop=> shop.isFetching\n  );"]},"metadata":{},"sourceType":"module"}