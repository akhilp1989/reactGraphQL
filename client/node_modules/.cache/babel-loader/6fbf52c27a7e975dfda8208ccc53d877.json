{"ast":null,"code":"var _jsxFileName = \"/Users/akhil.parashara/Documents/graphqlreact/ecommerce-project/src/Authentication/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../FunctionalComponents/FormInput/form-input.component';\nimport ButtonComponent from '../FunctionalComponents/Button/button-component'; //import {auth,signInWithGoogle} from '../FireBase/firebase.utils'\n\nimport { googleSignInStart, emailSignInStart } from '../Redux/User/user.action';\nimport { connect } from 'react-redux';\n\nconst singIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCred, setUserCred] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // const {emailSignInStart}=this.props //// We always destructure it so that we dont always have to call this.props.functoinName\n\n    const {\n      email,\n      password\n    } = userCred;\n    emailSignInStart(email, password); // console.log(this.state)\n  };\n\n  const changeHandler = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCred({ ...userCred,\n      [name]: value\n    });\n  };\n\n  {\n    //const {googleSignInStart}=this.props\n    //console.log('Props->',this.props)\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"I already have an Account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, \"Sign In with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.changeHandler,\n      name: \"email\",\n      required: \"required\",\n      label: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      onChange: this.changeHandler,\n      type: \"password\",\n      value: this.state.password,\n      name: \"password\",\n      label: \"Password\",\n      required: \"required\",\n      changeHandler: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ButtonComponent, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }, \"Sign In \"), /*#__PURE__*/React.createElement(ButtonComponent, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, \"Sign In with Google \"))));\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  })) //signOut:()=>dispatch(signOutStart())\n\n});\n\nexport default connect(null, mapDispatchToProps)(signIn);","map":{"version":3,"sources":["/Users/akhil.parashara/Documents/graphqlreact/ecommerce-project/src/Authentication/sign-in.component.jsx"],"names":["React","useState","FormInput","ButtonComponent","googleSignInStart","emailSignInStart","connect","singIn","userCred","setUserCred","email","password","handleSubmit","event","preventDefault","changeHandler","name","value","target","state","mapDispatchToProps","dispatch","signIn"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,uBAAP;AACA,OAAOC,SAAP,MAAsB,wDAAtB;AACA,OAAOC,eAAP,MAA4B,iDAA5B,C,CACA;;AACA,SAAQC,iBAAR,EAA0BC,gBAA1B,QAAiD,2BAAjD;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAGA,MAAMC,MAAM,GAAE,CAAC;AAACF,EAAAA,gBAAD;AAAkBD,EAAAA;AAAlB,CAAD,KAAyC;AACrD,QAAM,CAACI,QAAD,EAAUC,WAAV,IAAuBR,QAAQ,CAAC;AAACS,IAAAA,KAAK,EAAC,EAAP;AAAUC,IAAAA,QAAQ,EAAC;AAAnB,GAAD,CAArC;;AAEE,QAAMC,YAAY,GAAE,MAAMC,KAAN,IAAa;AAC7BA,IAAAA,KAAK,CAACC,cAAN,GAD6B,CAE/B;;AACE,UAAM;AAACJ,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAiBH,QAAvB;AACAH,IAAAA,gBAAgB,CAACK,KAAD,EAAOC,QAAP,CAAhB,CAJ6B,CAO/B;AACD,GARD;;AASA,QAAMI,aAAa,GAAEF,KAAD,IAAS;AACzB,UAAM;AAACG,MAAAA,IAAD;AAAMC,MAAAA;AAAN,QAAaJ,KAAK,CAACK,MAAzB;AACAT,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAa,OAACQ,IAAD,GAAOC;AAApB,KAAD,CAAX;AAEH,GAJD;;AAKA;AACI;AACA;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFA,eAII;AAAM,MAAA,QAAQ,EAAE,KAAKL,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,OAAhB;AAAwB,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWT,KAA1C;AACA,MAAA,QAAQ,EAAE,KAAKK,aADf;AAEA,MAAA,IAAI,EAAC,OAFL;AAGA,MAAA,QAAQ,EAAC,UAHT;AAIA,MAAA,KAAK,EAAC,OAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAQI,oBAAC,SAAD;AACA,MAAA,QAAQ,EAAE,KAAKA,aADf;AAEA,MAAA,IAAI,EAAC,UAFL;AAGA,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWR,QAHlB;AAIA,MAAA,IAAI,EAAC,UAJL;AAKA,MAAA,KAAK,EAAC,UALN;AAMA,MAAA,QAAQ,EAAC,UANT;AAQA,MAAA,aAAa,EAAE,KAAKI,aARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,eAkBE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,eAAD;AAAkB,MAAA,IAAI,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAC,QAAtB;AACC,MAAA,OAAO,EAAEX,iBADV;AAC6B,MAAA,cAAc,MAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFF,CAlBF,CAJJ,CADJ;AAgCH;AACJ,CArDD;;AAsDA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAI;AACnCjB,EAAAA,iBAAiB,EAAC,MAAIiB,QAAQ,CAACjB,iBAAiB,EAAlB,CADK;AAEnCC,EAAAA,gBAAgB,EAAC,CAACK,KAAD,EAAOC,QAAP,KAAkBU,QAAQ,CAAChB,gBAAgB,CAAC;AAACK,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAD,CAAjB,CAFR,CAGnC;;AAHmC,CAAJ,CAAnC;;AAOA,eAAeL,OAAO,CAAC,IAAD,EAAMc,kBAAN,CAAP,CAAkCE,MAAlC,CAAf","sourcesContent":["import React,{useState} from 'react'\nimport './sign-in.styles.scss'\nimport FormInput from '../FunctionalComponents/FormInput/form-input.component'\nimport ButtonComponent from '../FunctionalComponents/Button/button-component'\n//import {auth,signInWithGoogle} from '../FireBase/firebase.utils'\nimport {googleSignInStart,emailSignInStart} from '../Redux/User/user.action'\nimport {connect} from 'react-redux'\n\n\nconst singIn =({emailSignInStart,googleSignInStart})=> {\n  const [userCred,setUserCred]=useState({email:'',password:''})\n\n    const handleSubmit= async event=>{\n        event.preventDefault()\n      // const {emailSignInStart}=this.props //// We always destructure it so that we dont always have to call this.props.functoinName\n        const {email,password}=userCred\n        emailSignInStart(email,password);\n\n        \n      // console.log(this.state)\n    }\n    const changeHandler=(event)=>{\n        const {name,value}=event.target\n        setUserCred({...userCred,[name]:value})\n        \n    }\n    {\n        //const {googleSignInStart}=this.props\n        //console.log('Props->',this.props)\n        return(\n            <div className='sign-in'>\n            <h2>I already have an Account</h2>\n            <span>Sign In with your email and password</span>\n                \n                <form onSubmit={this.handleSubmit}>\n                \n                    <FormInput type='email' value={this.state.email} \n                    onChange={this.changeHandler} \n                    name=\"email\" \n                    required='required'\n                    label='Email' />\n                    \n                    <FormInput \n                    onChange={this.changeHandler}\n                    type=\"password\" \n                    value={this.state.password} \n                    name='password' \n                    label='Password'\n                    required='required'\n                   \n                    changeHandler={this.changeHandler}    />\n\n                  <div className='buttons'>\n                  <ButtonComponent  type=\"submit\">Sign In </ButtonComponent>\n                    <ButtonComponent type=\"button\"\n                     onClick={googleSignInStart} isGoogleSignIn >Sign In with Google </ButtonComponent>\n                  </div>\n                    \n                </form>\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps = dispatch =>({\n    googleSignInStart:()=>dispatch(googleSignInStart()),\n    emailSignInStart:(email,password)=>dispatch(emailSignInStart({email,password})),\n    //signOut:()=>dispatch(signOutStart())\n\n})\n\nexport default connect(null,mapDispatchToProps) (signIn)\n\n\n"]},"metadata":{},"sourceType":"module"}