{"ast":null,"code":"var _jsxFileName = \"/Users/akhil.parashara/Documents/graphqlreact/ecommerce-project/src/ClassComponents/ShopComponent/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../../FunctionalComponents/Collection/collectionPage.component';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../Redux/ShopData/shopData.actions';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsFetching } from '../../Redux/ShopData/shopDataMap.selector';\nimport WithSpinner from '../../FunctionalComponents/WithSpinner/withspinner.component';\nimport CollectionOverview from '../../FunctionalComponents/CollectionOverview/collection-overview.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass shopComponent extends Component {\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props; //console.log('Inside render from Shop->',loading)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 30\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:categoryId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 30\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(shopComponent);","map":{"version":3,"sources":["/Users/akhil.parashara/Documents/graphqlreact/ecommerce-project/src/ClassComponents/ShopComponent/shop.component.jsx"],"names":["React","Component","Route","CollectionPage","connect","fetchCollectionsStartAsync","createStructuredSelector","selectIsFetching","WithSpinner","CollectionOverview","CollectionOverviewWithSpinner","CollectionPageWithSpinner","shopComponent","render","match","isCollectionFetching","props","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,gEAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,0BAAR,QAAyC,uCAAzC;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,gBAAR,QAA+B,2CAA/B;AAEA,OAAOC,WAAP,MAAwB,8DAAxB;AAEA,OAAOC,kBAAP,MAA+B,6EAA/B;AAEA,MAAMC,6BAA6B,GAACF,WAAW,CAACC,kBAAD,CAA/C;AACA,MAAME,yBAAyB,GAACH,WAAW,CAACL,cAAD,CAA3C;;AAEA,MAAMS,aAAN,SAA4BX,SAA5B,CAAsC;AAElCY,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAA6B,KAAKC,KAAxC,CADI,CAGJ;;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEF,KAAK,CAACG,IAAK,EAAjC;AACA,MAAA,MAAM,EAAGD,KAAD,iBAAS,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAED;AAA1C,SAAoEC,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAGA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEF,KAAK,CAACG,IAAK,cAA3B;AACA,MAAA,MAAM,EAAGD,KAAD,iBAAS,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAED;AAAtC,SAAiEC,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADJ;AAQH;;AAdiC;;AAgBtC,MAAME,eAAe,GAACZ,wBAAwB,CAAC;AAC3CS,EAAAA,oBAAoB,EAAER;AADqB,CAAD,CAA9C;;AAIA,MAAMY,kBAAkB,GAACC,QAAQ,KAAG;AAChCf,EAAAA,0BAA0B,EAAC,MAAIe,QAAQ,CAAEf,0BAA0B,EAA5B;AADP,CAAH,CAAjC;;AAIA,eAAeD,OAAO,CAACc,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CP,aAA5C,CAAf","sourcesContent":["import React,{Component} from 'react'\nimport {Route} from 'react-router-dom'\nimport CollectionPage from '../../FunctionalComponents/Collection/collectionPage.component'\nimport {connect} from 'react-redux'\nimport {fetchCollectionsStartAsync} from '../../Redux/ShopData/shopData.actions'\nimport {createStructuredSelector} from 'reselect';\nimport {selectIsFetching} from '../../Redux/ShopData/shopDataMap.selector'\n\nimport WithSpinner from '../../FunctionalComponents/WithSpinner/withspinner.component'\n\nimport CollectionOverview from '../../FunctionalComponents/CollectionOverview/collection-overview.component'\n\nconst CollectionOverviewWithSpinner=WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner=WithSpinner(CollectionPage);\n\nclass shopComponent extends Component {\n       \n    render(){\n        const {match,isCollectionFetching}=this.props;\n        \n        //console.log('Inside render from Shop->',loading)\n        return (\n            <div className='shop-page'>\n            <Route exact path={`${match.path}`} \n            render={(props)=><CollectionOverviewWithSpinner isLoading={isCollectionFetching} {...props} />} /> \n            <Route path={`${match.path}/:categoryId`} \n            render={(props)=><CollectionPageWithSpinner isLoading={isCollectionFetching}  {...props} />} />\n            </div>\n        )\n    }\n}\nconst mapStateToProps=createStructuredSelector({\n    isCollectionFetching :selectIsFetching\n})\n\nconst mapDispatchToProps=dispatch=>({\n    fetchCollectionsStartAsync:()=>dispatch (fetchCollectionsStartAsync())\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(shopComponent)\n\n\n"]},"metadata":{},"sourceType":"module"}