{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../FireBase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shopData.actions';\nimport shopDataConstants from './shopDataConstants';\nexport function* fetchCollections() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); //yield console.log('collectionsMap ,',collectionsMap)\n\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* onFetchCollectionsStart() {\n  yield takeLatest(shopDataConstants.FETCH_COLLECTIONS_START, fetchCollections);\n}\nexport function* shopSagas() {\n  yield all([call(onFetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/akhil.parashara/Documents/graphqlreact/ecommerce-project/src/Redux/ShopData/shop.sagas.js"],"names":["takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","shopDataConstants","fetchCollections","collectionRef","collection","snapshot","get","collectionsMap","error","message","onFetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA0C,oBAA1C;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SACEC,uBADF,EAEEC,uBAFF,QAGO,oBAHP;AAKA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAC/BI,+BAD+B,EAE/BO,QAF+B,CAAjC,CAHE,CAOF;;AACA,UAAMV,GAAG,CAACI,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACD,GATD,CASE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACK,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,uBAAV,GAAoC;AACzC,QAAMjB,UAAU,CAACQ,iBAAiB,CAACU,uBAAnB,EAA4CT,gBAA5C,CAAhB;AACD;AAED,OAAO,UAAUU,SAAV,GAAqB;AAC1B,QAAMhB,GAAG,CAAC,CAACF,IAAI,CAACgB,uBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, put ,all} from 'redux-saga/effects';\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from '../../FireBase/firebase.utils';\n\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure\n} from './shopData.actions';\n\nimport shopDataConstants from './shopDataConstants';\n\nexport function* fetchCollections() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n    //yield console.log('collectionsMap ,',collectionsMap)\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* onFetchCollectionsStart() {\n  yield takeLatest(shopDataConstants.FETCH_COLLECTIONS_START, fetchCollections);\n}\n\nexport function* shopSagas(){\n  yield all([call(onFetchCollectionsStart)])\n}"]},"metadata":{},"sourceType":"module"}