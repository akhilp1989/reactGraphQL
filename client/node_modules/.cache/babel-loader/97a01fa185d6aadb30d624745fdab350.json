{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shopData;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : []);\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["/Users/akhil.parashara/Documents/graphqlreact/ecommerce-project/src/Redux/ShopData/shopDataMap.selector.js"],"names":["createSelector","selectShop","state","shopData","selectCollections","shop","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,QAAlC;;AAGA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE7CI,IAAI,IAAIA,IAAI,CAACC,WAFgC,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGP,cAAc,CACvD,CAACI,iBAAD,CADuD,EAEvDE,WAAW,IACTA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,EAHjB,CAAlD;AAMP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAChDb,cAAc,CACZ,CAACI,iBAAD,CADY,EAEZE,WAAW,IAAKA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,EAFpD,CADT;AAMP,OAAO,MAAMC,0BAA0B,GAAGd,cAAc,CACtD,CAACC,UAAD,CADsD,EAEtDI,IAAI,IAAIA,IAAI,CAACU,UAFyC,CAAjD;AAKP,OAAO,MAAMC,yBAAyB,GAAGhB,cAAc,CACrD,CAACC,UAAD,CADqD,EAErDI,IAAI,IAAI,CAAC,CAACA,IAAI,CAACC,WAFsC,CAAhD","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shopData;\n\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collections =>\n    collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollection = collectionUrlParam =>\n  createSelector(\n    [selectCollections],\n    collections => (collections ? collections[collectionUrlParam] : [])\n  );\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  shop => !!shop.collections\n);"]},"metadata":{},"sourceType":"module"}