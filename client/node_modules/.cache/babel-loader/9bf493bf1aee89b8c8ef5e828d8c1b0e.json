{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport userActionConstants from './userActionConstants';\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from '../../FireBase/firebase.utils';\nimport { SignInSuccess, SignInFailed, signOutSuccess, signOutFailed, signUpSuccess, signUpFailed } from './user.action'; //import {onClearCart} from '../Cart/cart.sagas'\n\nexport function* getUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    yield console.log('Getting Inside getUserAuth', userAuth, additionalData);\n    const userSnapshot = yield userRef.get(); //console.log('userSnapshotData->',userSnapshot.data())\n\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailed(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailed(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailed(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionConstants.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionConstants.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n  //yield console.log('Inside isUserAutenticated');\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;else {\n      yield getUserAuth(userAuth);\n    }\n  } catch (error) {\n    yield put(SignInFailed(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionConstants.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    auth.signOut();\n    yield put(signOutSuccess()); //yield put(onClearCart())\n  } catch (error) {\n    yield put(signOutFailed(error));\n  }\n}\nexport function* onSignOut() {\n  yield takeLatest(userActionConstants.SIGNOUT_START, signOut);\n}\nexport function* signUpUser({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  yield console.log('Inside SignUpUser');\n\n  try {\n    const {\n      userData\n    } = yield auth.createUserWithEmailAndPassword(email, password); // const {userProf}=yield createUserProfileDocument(userData,displayName)\n\n    yield put(signUpSuccess({\n      userData,\n      additionalData: displayName\n    }));\n  } catch (error) {\n    yield put(signUpFailed(error));\n  }\n}\nexport function* onSignUp() {\n  yield takeLatest(userActionConstants.SIGNUP_STARTED, signUpUser);\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getUserAuth(user, additionalData);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(userActionConstants.SIGNUP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOut), call(onSignUpSuccess), call(onSignUp)]);\n}","map":{"version":3,"sources":["/Users/akhil.parashara/Documents/graphqlreact/ecommerce-project/src/Redux/User/user.sagas.js"],"names":["takeLatest","put","call","all","userActionConstants","googleProvider","auth","createUserProfileDocument","getCurrentUser","SignInSuccess","SignInFailed","signOutSuccess","signOutFailed","signUpSuccess","signUpFailed","getUserAuth","userAuth","additionalData","userRef","console","log","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGNIN_START","onEmailSignInStart","EMAIL_SIGNIN_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","signOut","onSignOut","SIGNOUT_START","signUpUser","displayName","userData","createUserWithEmailAndPassword","onSignUp","SIGNUP_STARTED","signInAfterSignUp","onSignUpSuccess","SIGNUP_SUCCESS","userSaga"],"mappings":"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","sourcesContent":["import {takeLatest,put,call,all} from 'redux-saga/effects'\nimport userActionConstants from './userActionConstants'\nimport {googleProvider,auth,createUserProfileDocument,getCurrentUser} from '../../FireBase/firebase.utils'\nimport {SignInSuccess,SignInFailed,signOutSuccess,signOutFailed,signUpSuccess,signUpFailed} from './user.action'\n//import {onClearCart} from '../Cart/cart.sagas'\n\nexport function* getUserAuth(userAuth,additionalData){\n    try{\n        const userRef=yield call(createUserProfileDocument,userAuth);\n        yield console.log('Getting Inside getUserAuth',userAuth,additionalData)\n        const userSnapshot=yield userRef.get()\n        //console.log('userSnapshotData->',userSnapshot.data())\n        yield put(SignInSuccess({id:userSnapshot.id,...userSnapshot.data()}))\n    }\n    catch(error){\n        yield put(SignInFailed(error))\n    } \n}\n\nexport function* signInWithGoogle(){\n   try{\n    const {user}=yield auth.signInWithPopup(googleProvider);\n    yield getUserAuth(user)\n}\ncatch(error){\n    yield put(SignInFailed(error))\n}\n}\n\nexport function* signInWithEmail ({payload:{email,password}}){\n    try{\n        const {user}=yield auth.signInWithEmailAndPassword(email,password)\n        yield getUserAuth(user)\n    }\n    catch(error){\n       yield put(SignInFailed(error))\n    }\n}\n\nexport function* onGoogleSignInStart (){\n    yield takeLatest(userActionConstants.GOOGLE_SIGNIN_START,signInWithGoogle)\n}\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(userActionConstants.EMAIL_SIGNIN_START,signInWithEmail)\n}\n\nexport function* isUserAuthenticated(){\n    //yield console.log('Inside isUserAutenticated');\n    try{\n       const userAuth= yield getCurrentUser();\n       if(!userAuth)\n       return\n       else{\n           yield getUserAuth(userAuth)\n\n       }\n        \n       \n    }catch(error){\n        yield put(SignInFailed(error))\n\n    }\n\n}\n\nexport function* onCheckUserSession(){\n    yield takeLatest(userActionConstants.CHECK_USER_SESSION,isUserAuthenticated)\n}\n\nexport function* signOut(){\n   try{\n       auth.signOut();\n       yield put(signOutSuccess())\n       //yield put(onClearCart())\n\n   }catch(error){\n        yield put(signOutFailed(error))\n   }\n\n}\nexport function* onSignOut(){\n    yield takeLatest(userActionConstants.SIGNOUT_START,signOut)\n}\n\nexport function* signUpUser({payload:{email,password,displayName}}){\n    yield console.log('Inside SignUpUser');\n    try{\n        const {userData}=yield auth.createUserWithEmailAndPassword(email,password);\n       // const {userProf}=yield createUserProfileDocument(userData,displayName)\n        yield put(signUpSuccess({userData,additionalData:displayName}))\n        \n    }catch (error){\n        yield put(signUpFailed(error))\n    }\n}\n\nexport function* onSignUp(){\n    yield takeLatest(userActionConstants.SIGNUP_STARTED,signUpUser)\n}\n\nexport function* signInAfterSignUp({payload:{user,additionalData}}){\nyield getUserAuth(user,additionalData)\n\n}\nexport function* onSignUpSuccess(){\n    yield takeLatest (userActionConstants.SIGNUP_SUCCESS,signInAfterSignUp)\n}\nexport function* userSaga(){\n    yield all([call(onGoogleSignInStart),\n        call(onEmailSignInStart),call(onCheckUserSession),call(onSignOut),\n         call(onSignUpSuccess),\n        call(onSignUp)])\n}"]},"metadata":{},"sourceType":"module"}