{"ast":null,"code":"import { firestore, convertCollectionsSnapshotToMap } from '../../FireBase/firebase.utils';\nimport shopDataConstans from './shopDataConstants';\nimport { takeEvery, call } from 'redux-saga/effects';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shopData.actions';\nexport function* fetchCollectionsStartAsync() {\n  yield console.log('Inside saga fetch collections');\n  const colllectionRef = firestore.collection('collections');\n  const snapshot = colllectionRef.get();\n  const collectionMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(shopDataConstans.FETCH_COLLECTIONS_START, fetchCollectionsStartAsync);\n}","map":{"version":3,"sources":["/Users/akhil.parashara/Documents/graphqlreact/ecommerce-project/src/Redux/ShopData/shop.sagas.js"],"names":["firestore","convertCollectionsSnapshotToMap","shopDataConstans","takeEvery","call","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsStartAsync","console","log","colllectionRef","collection","snapshot","get","collectionMap","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAOA,SAAP,EAAiBC,+BAAjB,QAAuD,+BAAvD;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,SAAQC,SAAR,EAAkBC,IAAlB,QAA6B,oBAA7B;AACA,SAAQC,uBAAR,EAAgCC,uBAAhC,QAA+D,oBAA/D;AAGA,OAAO,UAAUC,0BAAV,GAAuC;AAC3C,QAAMC,OAAO,CAACC,GAAR,CAAY,+BAAZ,CAAN;AACA,QAAMC,cAAc,GAACV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAArB;AACA,QAAMC,QAAQ,GAACF,cAAc,CAACG,GAAf,EAAf;AACA,QAAMC,aAAa,GAAE,MAAMV,IAAI,CAACH,+BAAD,EAAiCW,QAAjC,CAA/B;AAEF;AAED,OAAO,UAAUG,qBAAV,GAAiC;AACpC,QAAMZ,SAAS,CAACD,gBAAgB,CAACc,uBAAlB,EAA0CT,0BAA1C,CAAf;AACH","sourcesContent":["import{firestore,convertCollectionsSnapshotToMap} from '../../FireBase/firebase.utils'\nimport shopDataConstans from './shopDataConstants'\nimport {takeEvery,call} from 'redux-saga/effects'\nimport {fetchCollectionsSuccess,fetchCollectionsFailure } from './shopData.actions'\n\n\nexport function* fetchCollectionsStartAsync() {\n   yield console.log('Inside saga fetch collections');\n   const colllectionRef=firestore.collection('collections');\n   const snapshot=colllectionRef.get();\n   const collectionMap= yield call(convertCollectionsSnapshotToMap,snapshot);\n  \n}\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(shopDataConstans.FETCH_COLLECTIONS_START,fetchCollectionsStartAsync)\n}"]},"metadata":{},"sourceType":"module"}