{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport userActionConstants from './userActionConstants';\nimport { googleProvider, auth, createUserProfileDocument } from '../../FireBase/firebase.utils';\nimport { SignInSuccess, SignInFailed } from './user.action';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get(); //console.log('userSnapshotData->',userSnapshot.data())\n\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailed(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password); //console.log('user->',user)\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get(); //console.log('userSnapshotData->',userSnapshot.data())\n\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignFailed(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionConstants.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionConstants.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/akhil.parashara/Documents/graphqlreact/ecommerce-project/src/Redux/User/user.sagas.js"],"names":["takeLatest","put","call","all","userActionConstants","googleProvider","auth","createUserProfileDocument","SignInSuccess","SignInFailed","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","SignFailed","onGoogleSignInStart","GOOGLE_SIGNIN_START","onEmailSignInStart","EMAIL_SIGNIN_START","userSaga"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,GAAnB,EAAuBC,IAAvB,EAA4BC,GAA5B,QAAsC,oBAAtC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAAQC,cAAR,EAAuBC,IAAvB,EAA4BC,yBAA5B,QAA4D,+BAA5D;AACA,SAAQC,aAAR,EAAsBC,YAAtB,QAAyC,eAAzC;AAGA,OAAO,UAAUC,gBAAV,GAA4B;AAChC,MAAG;AACF,UAAM;AAACC,MAAAA;AAAD,QAAO,MAAML,IAAI,CAACM,eAAL,CAAqBP,cAArB,CAAnB;AACA,UAAMQ,OAAO,GAAC,MAAMX,IAAI,CAACK,yBAAD,EAA2BI,IAA3B,CAAxB;AACA,UAAMG,YAAY,GAAC,MAAMD,OAAO,CAACE,GAAR,EAAzB,CAHE,CAIF;;AACA,UAAMd,GAAG,CAACO,aAAa,CAAC;AAACQ,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAoB,SAAGF,YAAY,CAACG,IAAb;AAAvB,KAAD,CAAd,CAAT;AACH,GANE,CAOH,OAAMC,KAAN,EAAY;AACR,UAAMjB,GAAG,CAACQ,YAAY,CAACS,KAAD,CAAb,CAAT;AACH;AACA;AAED,OAAO,UAAUC,eAAV,CAA2B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAT,CAA3B,EAAsD;AACzD,MAAG;AACC,UAAM;AAACX,MAAAA;AAAD,QAAO,MAAML,IAAI,CAACiB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAAnB,CADD,CAEC;;AACA,UAAMT,OAAO,GAAC,MAAMX,IAAI,CAACK,yBAAD,EAA2BI,IAA3B,CAAxB;AACA,UAAMG,YAAY,GAAC,MAAMD,OAAO,CAACE,GAAR,EAAzB,CAJD,CAKH;;AACA,UAAMd,GAAG,CAACO,aAAa,CAAC;AAACQ,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAoB,SAAGF,YAAY,CAACG,IAAb;AAAvB,KAAD,CAAd,CAAT;AACC,GAPD,CAQA,OAAMC,KAAN,EAAY;AACT,UAAMjB,GAAG,CAACuB,UAAU,CAACN,KAAD,CAAX,CAAT;AACF;AACJ;AAED,OAAO,UAAUO,mBAAV,GAAgC;AACnC,QAAMzB,UAAU,CAACI,mBAAmB,CAACsB,mBAArB,EAAyChB,gBAAzC,CAAhB;AACH;AAID,OAAO,UAAUiB,kBAAV,GAA8B;AACjC,QAAM3B,UAAU,CAACI,mBAAmB,CAACwB,kBAArB,EAAwCT,eAAxC,CAAhB;AACH;AAED,OAAO,UAAUU,QAAV,GAAoB;AACvB,QAAM1B,GAAG,CAAC,CAACD,IAAI,CAACuB,mBAAD,CAAL,EAA2BvB,IAAI,CAACyB,kBAAD,CAA/B,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest,put,call,all} from 'redux-saga/effects'\nimport userActionConstants from './userActionConstants'\nimport {googleProvider,auth,createUserProfileDocument} from '../../FireBase/firebase.utils'\nimport {SignInSuccess,SignInFailed} from './user.action'\n\n\nexport function* signInWithGoogle(){\n   try{\n    const {user}=yield auth.signInWithPopup(googleProvider);\n    const userRef=yield call(createUserProfileDocument,user);\n    const userSnapshot=yield userRef.get()\n    //console.log('userSnapshotData->',userSnapshot.data())\n    yield put(SignInSuccess({id:userSnapshot.id,...userSnapshot.data()}))\n}\ncatch(error){\n    yield put(SignInFailed(error))\n}\n}\n\nexport function* signInWithEmail ({payload:{email,password}}){\n    try{\n        const {user}=yield auth.signInWithEmailAndPassword(email,password)\n        //console.log('user->',user)\n        const userRef=yield call(createUserProfileDocument,user);\n        const userSnapshot=yield userRef.get()\n    //console.log('userSnapshotData->',userSnapshot.data())\n    yield put(SignInSuccess({id:userSnapshot.id,...userSnapshot.data()}))\n    }\n    catch(error){\n       yield put(SignFailed(error))\n    }\n}\n\nexport function* onGoogleSignInStart (){\n    yield takeLatest(userActionConstants.GOOGLE_SIGNIN_START,signInWithGoogle)\n}\n\n\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(userActionConstants.EMAIL_SIGNIN_START,signInWithEmail)\n}\n\nexport function* userSaga(){\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}