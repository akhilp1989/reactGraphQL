{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport userActionConstants from './userActionConstants';\nimport { googleProvider, auth, createUserProfileDocument } from '../../FireBase/firebase.utils';\nimport { SignInSuccess, SignInFailed } from './user.action';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get(); //console.log('userSnapshotData->',userSnapshot.data())\n\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailed(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    console.log('user->', user);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get(); //console.log('userSnapshotData->',userSnapshot.data())\n\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignFailed(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionConstants.GOOGLE_SIGNIN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionConstants.EMAIL_SIGNIN_START, signInWithEmail);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/akhil.parashara/Documents/graphqlreact/ecommerce-project/src/Redux/User/user.sagas.js"],"names":["takeLatest","put","call","all","userActionConstants","googleProvider","auth","createUserProfileDocument","SignInSuccess","SignInFailed","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","googleSignInSuccess","id","data","error","googleSignInFailed","signInWithEmail","payload","email","password","signInWithEmailAndPassword","console","log","emailSignInSuccess","emailSignFailed","onGoogleSignInStart","GOOGLE_SIGNIN_START","onEmailSignInStart","EMAIL_SIGNIN_START","userSaga"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,GAAnB,EAAuBC,IAAvB,EAA4BC,GAA5B,QAAsC,oBAAtC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAAQC,cAAR,EAAuBC,IAAvB,EAA4BC,yBAA5B,QAA4D,+BAA5D;AACA,SAAQC,aAAR,EAAsBC,YAAtB,QAAyC,eAAzC;AAGA,OAAO,UAAUC,gBAAV,GAA4B;AAChC,MAAG;AACF,UAAM;AAACC,MAAAA;AAAD,QAAO,MAAML,IAAI,CAACM,eAAL,CAAqBP,cAArB,CAAnB;AACA,UAAMQ,OAAO,GAAC,MAAMX,IAAI,CAACK,yBAAD,EAA2BI,IAA3B,CAAxB;AACA,UAAMG,YAAY,GAAC,MAAMD,OAAO,CAACE,GAAR,EAAzB,CAHE,CAIF;;AACA,UAAMd,GAAG,CAACe,mBAAmB,CAAC;AAACC,MAAAA,EAAE,EAACH,YAAY,CAACG,EAAjB;AAAoB,SAAGH,YAAY,CAACI,IAAb;AAAvB,KAAD,CAApB,CAAT;AACH,GANE,CAOH,OAAMC,KAAN,EAAY;AACR,UAAMlB,GAAG,CAACmB,kBAAkB,CAACD,KAAD,CAAnB,CAAT;AACH;AACA;AAED,OAAO,UAAUE,eAAV,CAA2B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAT,CAA3B,EAAsD;AACzD,MAAG;AACC,UAAM;AAACb,MAAAA;AAAD,QAAO,MAAML,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAAnB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBhB,IAArB;AACA,UAAME,OAAO,GAAC,MAAMX,IAAI,CAACK,yBAAD,EAA2BI,IAA3B,CAAxB;AACA,UAAMG,YAAY,GAAC,MAAMD,OAAO,CAACE,GAAR,EAAzB,CAJD,CAKH;;AACA,UAAMd,GAAG,CAAC2B,kBAAkB,CAAC;AAACX,MAAAA,EAAE,EAACH,YAAY,CAACG,EAAjB;AAAoB,SAAGH,YAAY,CAACI,IAAb;AAAvB,KAAD,CAAnB,CAAT;AACC,GAPD,CAQA,OAAMC,KAAN,EAAY;AACT,UAAMlB,GAAG,CAAC4B,eAAe,CAACV,KAAD,CAAhB,CAAT;AACF;AACJ;AAED,OAAO,UAAUW,mBAAV,GAAgC;AACnC,QAAM9B,UAAU,CAACI,mBAAmB,CAAC2B,mBAArB,EAAyCrB,gBAAzC,CAAhB;AACH;AAID,OAAO,UAAUsB,kBAAV,GAA8B;AACjC,QAAMhC,UAAU,CAACI,mBAAmB,CAAC6B,kBAArB,EAAwCZ,eAAxC,CAAhB;AACH;AAED,OAAO,UAAUa,QAAV,GAAoB;AACvB,QAAM/B,GAAG,CAAC,CAACD,IAAI,CAAC4B,mBAAD,CAAL,EAA2B5B,IAAI,CAAC8B,kBAAD,CAA/B,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest,put,call,all} from 'redux-saga/effects'\nimport userActionConstants from './userActionConstants'\nimport {googleProvider,auth,createUserProfileDocument} from '../../FireBase/firebase.utils'\nimport {SignInSuccess,SignInFailed} from './user.action'\n\n\nexport function* signInWithGoogle(){\n   try{\n    const {user}=yield auth.signInWithPopup(googleProvider);\n    const userRef=yield call(createUserProfileDocument,user);\n    const userSnapshot=yield userRef.get()\n    //console.log('userSnapshotData->',userSnapshot.data())\n    yield put(googleSignInSuccess({id:userSnapshot.id,...userSnapshot.data()}))\n}\ncatch(error){\n    yield put(googleSignInFailed(error))\n}\n}\n\nexport function* signInWithEmail ({payload:{email,password}}){\n    try{\n        const {user}=yield auth.signInWithEmailAndPassword(email,password)\n        console.log('user->',user)\n        const userRef=yield call(createUserProfileDocument,user);\n        const userSnapshot=yield userRef.get()\n    //console.log('userSnapshotData->',userSnapshot.data())\n    yield put(emailSignInSuccess({id:userSnapshot.id,...userSnapshot.data()}))\n    }\n    catch(error){\n       yield put(emailSignFailed(error))\n    }\n}\n\nexport function* onGoogleSignInStart (){\n    yield takeLatest(userActionConstants.GOOGLE_SIGNIN_START,signInWithGoogle)\n}\n\n\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(userActionConstants.EMAIL_SIGNIN_START,signInWithEmail)\n}\n\nexport function* userSaga(){\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}