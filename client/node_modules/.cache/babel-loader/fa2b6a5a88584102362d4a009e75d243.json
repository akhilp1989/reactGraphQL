{"ast":null,"code":"import { firestore, convertCollectionsSnapshotToMap } from '../../FireBase/firebase.utils';\nimport shopDataConstans from './shopDataConstants';\nimport { takeEvery } from 'redux-saga/effects';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shopData.actions';\nexport function* fetchCollectionsStartAsync() {\n  yield console.log('Inside saga fetch collections');\n  const colllectionRef = firestore.collection('collections');\n  colllectionRef.get().then(snapshot => {\n    const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n  });\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(shopDataConstans.FETCH_COLLECTIONS_START, fetchCollectionsStartAsync);\n}","map":{"version":3,"sources":["/Users/akhil.parashara/Documents/graphqlreact/ecommerce-project/src/Redux/ShopData/shop.sagas.js"],"names":["firestore","convertCollectionsSnapshotToMap","shopDataConstans","takeEvery","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsStartAsync","console","log","colllectionRef","collection","get","then","snapshot","collectionMap","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAOA,SAAP,EAAiBC,+BAAjB,QAAuD,+BAAvD;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AACA,SAAQC,uBAAR,EAAgCC,uBAAhC,QAA+D,oBAA/D;AAGA,OAAO,UAAUC,0BAAV,GAAuC;AAC3C,QAAMC,OAAO,CAACC,GAAR,CAAY,+BAAZ,CAAN;AACA,QAAMC,cAAc,GAACT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAArB;AACAD,EAAAA,cAAc,CAACE,GAAf,GAAqBC,IAArB,CAA0BC,QAAQ,IAAE;AACnC,UAAMC,aAAa,GAACb,+BAA+B,CAACY,QAAD,CAAnD;AACK,GAFN;AAIF;AAED,OAAO,UAAUE,qBAAV,GAAiC;AACpC,QAAMZ,SAAS,CAACD,gBAAgB,CAACc,uBAAlB,EAA0CV,0BAA1C,CAAf;AACH","sourcesContent":["import{firestore,convertCollectionsSnapshotToMap} from '../../FireBase/firebase.utils'\nimport shopDataConstans from './shopDataConstants'\nimport {takeEvery} from 'redux-saga/effects'\nimport {fetchCollectionsSuccess,fetchCollectionsFailure } from './shopData.actions'\n\n\nexport function* fetchCollectionsStartAsync() {\n   yield console.log('Inside saga fetch collections');\n   const colllectionRef=firestore.collection('collections');\n   colllectionRef.get().then(snapshot=>{\n    const collectionMap=convertCollectionsSnapshotToMap(snapshot);\n        })\n      \n}\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(shopDataConstans.FETCH_COLLECTIONS_START,fetchCollectionsStartAsync)\n}"]},"metadata":{},"sourceType":"module"}